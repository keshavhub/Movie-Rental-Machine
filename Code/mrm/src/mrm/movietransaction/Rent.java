package mrm.movietransaction;import store.AccountInformation;import store.Card;import store.Message;import store.Movies;import store.Receipt;import store.Status;import mrm.MRM;import mrm.Session;import mrm.physical.*;public class Rent extends Transaction{     public Rent(MRM mrm, Session session, Card card, int zip)    {        super(mrm, session, card, zip);    }         protected Message getSpecificsFromCustomer() throws CustomerConsole.Cancelled    {        from = mrm.getCustomerConsole().readMenuChoice(            "Account to rent from",            AccountInformation.ACCOUNT_NAMES);        String [] movieOptions = { "Avathar", "Wanted", "Do or Die", "superman", "fast5"  };        Movies [] movieValues = {                                   new Movies(5), new Movies(5), new Movies(5),                                  new Movies(5), new Movies(5)                                };                                          String amountMessage = "";        boolean validAmount = false;                while (! validAmount)        {            charge = movieValues [                 mrm.getCustomerConsole().readMenuChoice(                    amountMessage + "Movies to Rent", movieOptions) ];                                        validAmount = mrm.getMovieDispenser().checkMovieOnHand(charge);            if (! validAmount)                amountMessage = "Movies Unavailable\n";        }                return new Message(Message.RENT,                            card, zip, serialNumber, from, -1, charge);    }           protected Receipt completeTransaction()    {        mrm.getMovieDispenser().dispenseMovie(charge);        return new Receipt(this.mrm, this.card, this, this.balances) {            {                detailsPortion = new String[2];                detailsPortion[0] = "RENT FROM: " +                                     AccountInformation.ACCOUNT_ABBREVIATIONS[from];                detailsPortion[1] = "MOVIE CHARGE: " + charge.toString();            }        };    }           private int from;      private Movies charge;           }