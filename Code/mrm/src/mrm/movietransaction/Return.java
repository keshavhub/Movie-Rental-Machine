 package mrm.movietransaction;import store.AccountInformation;import store.Card;import store.Message;import store.Movies;import store.Receipt;import store.Status;import mrm.MRM;import mrm.Session;import mrm.physical.*;public class Return extends Transaction{       public Return(MRM mrm, Session session, Card card, int zip)    {        super(mrm, session, card, zip);    }          protected Message getSpecificsFromCustomer() throws CustomerConsole.Cancelled    {           	from = mrm.getCustomerConsole().readMenuChoice(                "Account to withdraw from",                AccountInformation.ACCOUNT_NAMES);            String [] amountOptions = { "Avatar", "Wanted", "Do or Die", "Superman", "Fast5" };            Movies [] amountValues = {                                       new Movies(5), new Movies(5), new Movies(5),                                      new Movies(5), new Movies(5)                                    };                                                  String amountMessage = "";            boolean validAmount = false;                        while (! validAmount)            {                charge = amountValues [                     mrm.getCustomerConsole().readMenuChoice(                        amountMessage + "Movies to Return \n"+ "Click the movie acceptor button\n" +                        		"inorder to simulate deposit ", amountOptions) ];                                                validAmount = mrm.getMovieDispenser().checkMovieOnHand(charge);                if (! validAmount)                    amountMessage = "NO such Movies in Machine log\n";            }                        return new Message(Message.INITIATE_RETURN,                                card, zip, serialNumber, from, -1, charge);    }         protected Receipt completeTransaction() throws CustomerConsole.Cancelled    {        mrm.getMovieAcceptor().acceptEnvelope();        Status status = mrm.getNetworkToCenter().sendMessage(            new Message(Message.COMPLETE_RETURN,                        card, zip, serialNumber, -1, from, charge),             balances);                    return new Receipt(this.mrm, this.card, this, this.balances) {            {                detailsPortion = new String[2];                detailsPortion[0] = "RETURN TO: " +                                     AccountInformation.ACCOUNT_ABBREVIATIONS[from];                detailsPortion[1] = "RETURNED MOVIE PRICE: " + charge.toString();            }        };    }       private int from;       private Movies charge;            }